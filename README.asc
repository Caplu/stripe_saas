== StripeSaas

A Rails 4 Engine providing Stripe subscription management for SaaS applications.
Based on the work of Andrew Culver in Koudoku (https://github.com/andrewculver/koudoku).

== Installation

=== Add gem dependency

Include the stripe_saas gem in your Gemfile and bundle (install):

[source,ruby]
-------------------------------------------
gem 'stripe_saas'
-------------------------------------------

=== Install subscriptions management on a model.

A rails generator is provided to install the StripeSaas models:

[source,ruby]
-------------------------------------------
rails g stripe_saas:install user
-------------------------------------------

==== Stripe Subscriptions

A model that mirrors a Stripe subscription (https://stripe.com/docs/api/ruby#subscriptions)
is generated and a one-to-one relationship between it and one of your
application's models as the owner of the subscription.

In the example above the generated StripeSaas::Subscription 'belongs to' your
application's User:

[source,ruby]
-------------------------------------------
class Subscription < ActiveRecord::Base
  include StripeSaas::Subscription

  belongs_to :user
  monetize :current_price_cents, allow_nil: true
end
-------------------------------------------

and the User class will 'has one' subscription:

[source,ruby]
-------------------------------------------
has_one :subscription
-------------------------------------------

==== Stripe Plans

A model that mirrors a Stripe plan (https://stripe.com/docs/api/ruby#plans) is
generated.

[source,ruby]
-------------------------------------------
class Plan < ActiveRecord::Base
  has_many :subscriptions

  include StripeSaas::Plan

  monetize :price_cents
end
-------------------------------------------

StripeSaas::Plan provides provides all of the attributes expected in String plus
a few used for view purposes (:highlight, :features, :display_order)

[source,ruby]
-------------------------------------------
Plan.find_or_create_by(stripe_id: 'startup').update_attributes({
  name: 'Start Up',
  price: 29.99,
  interval: 'month',
  interval_count: 1,
  trial_period_days: 0,
  statement_descriptor: 'Aweome Service Start Up Plan',
  features_as_json: ['5 Contexts', '1 million Signals & Pushes/day', '1000 Connections', 'Basic Analytics'].to_json,
  display_order: 2,
  highlight: true
})
-------------------------------------------

Any plan with a price of 0.0 is considered a free plan in StripeSaas which will
not require the user to enter credit card information.

After running the installer you will have to migrate your database:

[source,ruby]
-------------------------------------------
rake db:migrate
-------------------------------------------

== Configuration

As part of the installation procedure an initializer is generated under

[source,ruby]
-------------------------------------------
StripeSaas.setup do |config|
  config.subscriptions_owned_by = :user
  # config.devise_scope = :user
  config.stripe_publishable_key = ENV['STRIPE_PUBLISHABLE_KEY']
  config.stripe_secret_key = ENV['STRIPE_SECRET_KEY']
  config.create_plans_in_stripe = false
end
-------------------------------------------

* _subscriptions_owned_by_: The symbol of the class that owns the subscription
* _devise_scope_: If using Devise and the subscription is not owned by the devise
  class (user/customer). For example, if users have accounts, and accounts have
  subscriptions. Then config.subscriptions_owned_by = :account and config.devise_scope = :user
* _stripe_publishable_key_: Your Stripe Publishable Key https://stripe.com/docs/tutorials/dashboard#api-keys
* _stripe_secret_key_: Your Stripe Secret Key https://stripe.com/docs/tutorials/dashboard#api-keys
* _create_plans_in_stripe_: Whether to autogenerate the local Plans in Stripe and
  keep then in synch

  Note: Preferably set you keys via environment variables as shown in the default
  initializer above.
